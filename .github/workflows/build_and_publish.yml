name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17 with OpenJDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Bump Version
        id: bump
        uses: nnichols/maven-version-bump-action@v3
        with:
          github-token: ${{ env.GITHUB_TOKEN }}

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Set Release version env variable
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Build with Maven
        env:
          OAUTH_TEST_TOKEN: ${{ secrets.OAUTH_TEST_TOKEN }}
        run: mvn clean package

      - name: Create release
        uses: actions/create-release@v1
        id: create_release # Add this line
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_GH_TOKEN }}
          GITHUB_REF: ${{ github.ref }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          body: Automated release of ${{ github.sha }}
          draft: false
          prerelease: false
      - name: upload artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_GH_TOKEN }}
        with:
          asset_path: target/TwitchWhitelister-${{ env.RELEASE_VERSION }}.jar
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: TwitchWhitelister-${{ env.RELEASE_VERSION }}.jar
          asset_content_type: application/jar